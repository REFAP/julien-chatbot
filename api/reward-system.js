// api/reward-system.js
// Version minimale du syst√®me de r√©compense - Sans imports complexes

export default async function handler(req, res) {
  try {
    if (req.method !== 'POST') {
      return res.status(405).json({ error: 'Method not allowed' });
    }

    const { message, userData = {}, action = 'analyze', sessionId } = req.body;

    // Validation
    if (!message && action !== 'collect_data') {
      return res.status(400).json({ error: 'Message requis' });
    }

    // D√©tection du niveau utilisateur
    const userLevel = getUserLevel(userData);
    
    // D√©tection du type de question
    const questionType = detectQuestionType(message || '');
    
    // G√©n√©ration de la strat√©gie selon le niveau
    const strategy = getConversionStrategy(userLevel, questionType);
    
    // Calcul de la valeur du lead
    const leadValue = calculateLeadValue(userData, questionType);
    
    // G√©n√©ration de la r√©ponse selon le niveau
    const response = generateResponseByLevel(message, userLevel, questionType);

    return res.status(200).json({
      success: true,
      response,
      userLevel,
      levelName: getLevelName(userLevel),
      
      // Strat√©gie de conversion
      conversionStrategy: strategy,
      uiConfig: strategy ? generateUIConfig(userLevel, strategy) : null,
      
      // Informations business
      businessMetrics: {
        leadValue,
        partner: getOptimalPartner(questionType, leadValue),
        upgradeAvailable: !!strategy
      },
      
      // Analytics
      analytics: {
        questionType,
        timestamp: new Date().toISOString(),
        sessionId
      }
    });

  } catch (error) {
    console.error('Erreur reward system:', error);
    return res.status(500).json({
      error: 'Erreur serveur',
      details: error.message
    });
  }
}

// Fonctions utilitaires int√©gr√©es
function getUserLevel(userData) {
  const { email, phone, vehicleModel, location } = userData || {};
  
  if (phone && vehicleModel && location) return 3; // Full profile
  if (phone && email) return 2; // Phone verified
  if (email) return 1; // Email verified
  return 0; // Anonymous
}

function detectQuestionType(message) {
  const messageLower = message.toLowerCase();
  
  if (messageLower.includes('frein') || messageLower.includes('freinage')) return 'brakes';
  if (messageLower.includes('moteur') || messageLower.includes('voyant')) return 'engine';
  if (messageLower.includes('boite') || messageLower.includes('vitesse')) return 'transmission';
  
  return 'general';
}

function getConversionStrategy(level, questionType) {
  const strategies = {
    0: { // Anonymous ‚Üí Email
      trigger: `üîì **Diagnostic ${questionType === 'brakes' ? 'freinage' : 'moteur'} complet disponible !**\n\nD'apr√®s mon analyse, votre probl√®me n√©cessite un diagnostic approfondi. Mes algorithmes avanc√©s peuvent analyser 47 points de contr√¥le suppl√©mentaires.\n\nüíé **Valeur : 50‚Ç¨ d'expertise gratuite**\nIl vous suffit de laisser votre email pour d√©bloquer le rapport complet.`,
      required: ['email', 'firstName', 'location'],
      reward: 'diagnostic premium avec estimation co√ªts',
      value: '50‚Ç¨ d\'expertise gratuite'
    },
    
    1: { // Email ‚Üí Phone
      trigger: `üìû **Expertise maximale disponible !**\n\nNos partenaires experts peuvent vous rappeler dans l'heure pour un devis personnalis√© pr√©cis et un conseil sp√©cialis√©.\n\nüíé **Service habituellement factur√© 80‚Ç¨ - GRATUIT pour vous**`,
      required: ['phone', 'vehicleModel', 'urgency'],
      reward: 'mise en relation directe avec garage partenaire',
      value: 'Devis personnalis√© + Rdv prioritaire'
    },
    
    2: { // Phone ‚Üí Full Profile
      trigger: `üèÜ **Service VIP - Diagnostic pr√©dictif !**\n\nAvec l'historique complet de votre v√©hicule, notre IA peut pr√©dire les prochaines pannes et optimiser vos co√ªts maintenance.\n\nüéÅ **Service premium exclusif - Acc√®s VIP √† vie**`,
      required: ['vehicleYear', 'mileage', 'maintenanceHistory'],
      reward: 'diagnostic pr√©dictif et suivi personnalis√©',
      value: 'Pr√©vention pannes futures'
    }
  };
  
  return strategies[level] || null;
}

function calculateLeadValue(userData, questionType) {
  const baseValues = {
    'engine': 35,
    'brakes': 40,
    'transmission': 45,
    'general': 25
  };
  
  const level = getUserLevel(userData);
  const multipliers = [0, 1, 1.8, 2.5]; // Par niveau
  
  const baseValue = baseValues[questionType] || 25;
  return Math.round(baseValue * (multipliers[level] || 1));
}

function getOptimalPartner(questionType, leadValue) {
  if (questionType === 'brakes' && leadValue <= 40) return 'MIDAS';
  if (questionType === 'engine' && leadValue >= 35) return 'IDGARAGES';
  return 'MIDAS';
}

function getLevelName(level) {
  const names = {
    0: 'Diagnostic de Base',
    1: 'Diagnostic Avanc√©', 
    2: 'Expertise Premium',
    3: 'Service VIP'
  };
  return names[level] || 'Inconnu';
}

function generateResponseByLevel(message, level, questionType) {
  const responses = {
    0: `**Diagnostic de base** pour votre probl√®me de ${questionType === 'brakes' ? 'freinage' : questionType === 'engine' ? 'moteur' : 'v√©hicule'}.\n\nD'apr√®s mon analyse initiale, ${questionType === 'brakes' ? 'les freins n√©cessitent une v√©rification' : 'le moteur pr√©sente des sympt√¥mes √† analyser'}. Pour un diagnostic complet...`,
    
    1: `**Diagnostic avanc√©** de votre ${questionType}.\n\nAnalyse approfondie termin√©e : ${questionType === 'brakes' ? 'syst√®me de freinage √† contr√¥ler en priorit√©' : 'probl√®me moteur identifi√© avec pr√©cision'}. Estimation des co√ªts disponible. Pour une expertise personnalis√©e...`,
    
    2: `**Expertise premium** de votre probl√®me.\n\nDiagnostic complet effectu√© par nos algorithmes avanc√©s. Expert partenaire contact√© pour devis personnalis√©. Pour un suivi pr√©dictif...`,
    
    3: `**Service VIP activ√©** - Diagnostic pr√©dictif personnalis√©.\n\nAnalyse compl√®te de votre v√©hicule avec pr√©dictions d'entretien et optimisation des co√ªts. Suivi automatique activ√©.`
  };
  
  return responses[level] || responses[0];
}

function generateUIConfig(level, strategy) {
  const configs = {
    0: {
      title: "üîì Diagnostic Premium Gratuit",
      subtitle: strategy.value,
      fields: [
        { name: 'email', type: 'email', placeholder: 'votre@email.com', required: true },
        { name: 'firstName', type: 'text', placeholder: 'Votre pr√©nom', required: true },
        { name: 'location', type: 'text', placeholder: 'Votre ville', required: true }
      ],
      button: 'OBTENIR MON DIAGNOSTIC PREMIUM'
    },
    1: {
      title: "üìû Expertise Personnalis√©e", 
      subtitle: "Un expert vous rappelle sous 1h",
      fields: [
        { name: 'phone', type: 'tel', placeholder: '06 12 34 56 78', required: true },
        { name: 'vehicleModel', type: 'text', placeholder: 'Ex: Peugeot 308', required: true },
        { name: 'urgency', type: 'select', options: ['Imm√©diat', 'Cette semaine', 'Ce mois'], required: true }
      ],
      button: 'ACC√âDER √Ä L\'EXPERTISE MAXIMALE'
    },
    2: {
      title: "üèÜ Service VIP",
      subtitle: "Suivi personnalis√© √† vie", 
      fields: [
        { name: 'vehicleYear', type: 'number', placeholder: '2018', required: true },
        { name: 'mileage', type: 'number', placeholder: '85000 km', required: true }
      ],
      button: 'ACTIVER LE SERVICE VIP'
    }
  };
  
  return configs[level];
}
