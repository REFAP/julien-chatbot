// api/chat-dual-brain.js - Version avec CTA email optimis√© et capture automatique

export default async function handler(req, res) {
  // Configuration CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');
  
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }
  
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'M√©thode non autoris√©e' });
  }

  try {
    // D√©tecter si l'utilisateur a fourni un email
    const { message, userData = {}, sessionId } = req.body;
    
    if (!message) {
      return res.status(400).json({ error: 'Message requis' });
    }

    const emailRegex = /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}/;
    const userEmail = message.match(emailRegex)?.[0];
    
    if (userEmail) {
      // Email d√©tect√© = upgrade automatique vers premium gratuit
      return res.status(200).json({
        success: true,
        message: `üéâ **EMAIL CONFIRM√â : ${userEmail}** üéâ\n\n` +
          `‚úÖ **DIAGNOSTIC PREMIUM GRATUIT ACTIV√â !**\n\n` +
          `üìß **Votre rapport d√©taill√© sera envoy√© dans 2 minutes √† :**\n` +
          `${userEmail}\n\n` +
          `üöÄ **Diagnostic en cours de g√©n√©ration...**\n` +
          `‚Ä¢ Analyse technique approfondie de votre probl√®me de freinage\n` +
          `‚Ä¢ Estimation pr√©cise des co√ªts (plaquettes, disques, main d'≈ìuvre)\n` +
          `‚Ä¢ Guide de r√©paration avec photos √©tape par √©tape\n` +
          `‚Ä¢ Liste de garages recommand√©s dans votre r√©gion\n` +
          `‚Ä¢ Conseils anti-arnaque pour n√©gocier\n\n` +
          `üì± **V√©rifiez votre bo√Æte mail dans 2 minutes !**\n` +
          `*Pensez √† v√©rifier vos spams si besoin*\n\n` +
          `üéÅ **BONUS :** Vous recevrez aussi nos alertes rappels constructeurs !`,
        metadata: {
          mode: "üéÅ Email Premium Activ√©",
          userLevel: 1,
          leadValue: 85,
          email: userEmail,
          timestamp: new Date().toISOString()
        }
      });
    }

    // D√©tection niveau utilisateur
    let userLevel = 0;
    if (userData.email) userLevel = 1;
    if (userData.phone) userLevel = 2;
    if (userData.vehicleInfo) userLevel = 3;

    const levelNames = {
      0: "Diagnostic de Base",
      1: "Diagnostic Avanc√©", 
      2: "Expertise Premium",
      3: "Service VIP"
    };

    // Appel Dual Brain avec dialogue direct
    let response = "";
    let mode = "simulation_intelligent";
    
    // Essai Claude + OpenAI (Dual Brain r√©el)
    try {
      const claudeResponse = await callClaude(message, userLevel);
      const openaiResponse = await callOpenAI(message, userLevel);
      
      if (claudeResponse && openaiResponse) {
        // FUSION INTELLIGENTE pour dialogue direct
        response = await fusionDualBrain(message, claudeResponse, openaiResponse, userLevel);
        mode = "dual_brain_real";
      } else if (claudeResponse) {
        response = await formatClaudeResponse(message, claudeResponse, userLevel);
        mode = "claude_real";
      } else if (openaiResponse) {
        response = await formatOpenAIResponse(message, openaiResponse, userLevel);
        mode = "openai_real";
      }
    } catch (error) {
      console.log('APIs √©chouent, utilisation mode intelligent:', error.message);
    }

    // Fallback intelligent avec dialogue direct
    if (!response) {
      response = await simulationIntelligente(message, userLevel);
      mode = "simulation_intelligent";
    }

    // Ajout du CTA email pour niveau 0
    if (userLevel === 0) {
      response += `\n\nüéÅ **DIAGNOSTIC PREMIUM GRATUIT** üéÅ\n`;
      response += `**Obtenez IMM√âDIATEMENT votre rapport complet :**\n`;
      response += `‚úÖ Diagnostic pr√©cis sp√©cifique √† votre v√©hicule\n`;
      response += `‚úÖ Estimation exacte des co√ªts de r√©paration\n`;
      response += `‚úÖ Guide de r√©paration d√©taill√©\n`;
      response += `‚úÖ Conseils pour √©viter l'arnaque garage\n\n`;
      response += `üìß **TAPEZ VOTRE EMAIL DANS LE CHAT** ‚¨áÔ∏è\n`;
      response += `*Exemple : votre.email@gmail.com*\n`;
      response += `‚ö° **Rapport envoy√© automatiquement en 2 minutes !**\n`;
      response += `\nüí° **BONUS :** Alertes rappels constructeurs + conseils experts gratuits !`;
    }

    // Calcul business
    const needType = detectNeedType(message);
    const baseScore = calculateScore(needType, mode);
    const leadValue = calculateLeadValue(needType, userLevel, mode);

    // Logging Airtable
    await logToAirtable({
      message,
      response,
      userLevel,
      leadValue,
      mode,
      needType,
      sessionId
    });

    return res.status(200).json({
      success: true,
      message: response,
      metadata: {
        mode,
        userLevel,
        levelName: levelNames[userLevel],
        needType,
        leadValue,
        score: baseScore,
        partner: needType === "brakes" ? "MIDAS" : "IDGARAGES",
        timestamp: new Date().toISOString()
      }
    });

  } catch (error) {
    console.error('Erreur chat-dual-brain:', error);
    return res.status(500).json({ error: 'Erreur serveur' });
  }
}

// === APPELS APIs ===
async function callClaude(message, userLevel) {
  try {
    const claudeKey = process.env.CLAUDE_API_KEY;
    if (!claudeKey) return null;

    const systemPrompt = `Tu es Julien, expert automobile FAP/EGR/AdBlue. R√©ponds directement et pr√©cis√©ment √† la question pos√©e.
    
    Niveau utilisateur: ${userLevel}
    - Niveau 0: Diagnostic de base + invitation email pour plus de d√©tails
    - Niveau 1+: Diagnostic complet avec estimations de co√ªts
    
    Style: Expert technique mais accessible, questions pertinentes pour approfondir le diagnostic.`;

    const response = await fetch('https://api.anthropic.com/v1/messages', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-api-key': claudeKey,
        'anthropic-version': '2023-06-01'
      },
      body: JSON.stringify({
        model: 'claude-3-5-sonnet-20241022',
        max_tokens: 1000,
        messages: [
          { role: 'user', content: `${systemPrompt}\n\nQuestion: ${message}` }
        ]
      })
    });

    if (!response.ok) return null;
    const data = await response.json();
    return data.content[0].text;
  } catch (error) {
    console.error('Erreur Claude:', error);
    return null;
  }
}

async function callOpenAI(message, userLevel) {
  try {
    const openaiKey = process.env.CLE_API_OPENAI;
    if (!openaiKey) return null;

    const systemPrompt = `Tu es un assistant conversationnel expert en automobile. R√©ponds de mani√®re engageante et persuasive √† la question pos√©e.
    
    Niveau utilisateur: ${userLevel}
    - Niveau 0: Encourage √† donner email pour diagnostic complet
    - Niveau 1+: Sois tr√®s d√©taill√© et expert
    
    Style: Chaleureux, rassurant, expert en conversion client.`;

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${openaiKey}`
      },
      body: JSON.stringify({
        model: 'gpt-4o',
        max_tokens: 1000,
        messages: [
          { role: 'system', content: systemPrompt },
          { role: 'user', content: message }
        ]
      })
    });

    if (!response.ok) return null;
    const data = await response.json();
    return data.choices[0].message.content;
  } catch (error) {
    console.error('Erreur OpenAI:', error);
    return null;
  }
}

// === FUSION DUAL BRAIN ===
async function fusionDualBrain(message, claudeResponse, openaiResponse, userLevel) {
  // Fusion intelligente des deux r√©ponses
  const needType = detectNeedType(message);
  
  if (userLevel === 0) {
    return `üîß **Diagnostic Dual Brain Activ√©** üß†\n\n${claudeResponse}\n\nüí° **Expertise Compl√©mentaire:**\n${openaiResponse}`;
  } else {
    return `üß† **Analyse Dual Brain Premium** üîß\n\n**Diagnostic Technique (Claude):**\n${claudeResponse}\n\n**Analyse Compl√©mentaire (OpenAI):**\n${openaiResponse}\n\n‚úÖ **Diagnostic complet termin√© !**`;
  }
}

async function formatClaudeResponse(message, claudeResponse, userLevel) {
  if (userLevel === 0) {
    return `üîß **Diagnostic Claude Activ√©** \n\n${claudeResponse}`;
  } else {
    return `üß† **Analyse Claude Premium** üîß\n\n${claudeResponse}`;
  }
}

async function formatOpenAIResponse(message, openaiResponse, userLevel) {
  if (userLevel === 0) {
    return `ü§ñ **Diagnostic OpenAI Activ√©** \n\n${openaiResponse}`;
  } else {
    return `ü§ñ **Analyse OpenAI Premium** üîß\n\n${openaiResponse}`;
  }
}

// === SIMULATION INTELLIGENTE ===
async function simulationIntelligente(message, userLevel) {
  const needType = detectNeedType(message);
  const lowerMessage = message.toLowerCase();
  
  let baseResponse = "";
  
  // R√©ponses directes et intelligentes selon le probl√®me
  if (needType === "brakes") {
    if (userLevel === 0) {
      baseResponse = `üîß **Diagnostic Freinage** üöó\n\nD'apr√®s ta description "${message}", je d√©tecte un probl√®me de freinage qui n√©cessite une attention imm√©diate.\n\n**Questions importantes :**\n‚Ä¢ Le bruit appara√Æt-il au freinage ou en roulant ?\n‚Ä¢ Est-ce un grincement, un couinement ou un bruit m√©tallique ?\n‚Ä¢ Le frein tire-t-il d'un c√¥t√© ?\n\n‚ö†Ô∏è **S√©curit√© prioritaire** : Les freins sont un √©l√©ment vital, un contr√¥le rapide est recommand√©.\n\nüéØ **POUR VOTRE DIAGNOSTIC COMPLET GRATUIT :**\nüìß **Tapez simplement votre email dans le chat** ‚¨áÔ∏è\n*Exemple : votre.nom@gmail.com*\n\n‚ö° **Vous recevrez automatiquement :**\n‚Ä¢ Analyse pr√©cise de votre probl√®me\n‚Ä¢ Estimation exacte des co√ªts\n‚Ä¢ Guide photos √©tape par √©tape\n‚Ä¢ Garages recommand√©s pr√®s de chez vous`;
    } else {
      baseResponse = `üß† **Diagnostic Freinage Premium** üîß\n\nAnalyse de "${message}" :\n\n**Causes probables :**\n‚Ä¢ Plaquettes us√©es (80% des cas) - 120-250‚Ç¨\n‚Ä¢ Disques voil√©s (15% des cas) - 200-400‚Ç¨ \n‚Ä¢ √âtriers gripp√©s (5% des cas) - 150-300‚Ç¨\n\n**Diagnostic imm√©diat recommand√©** - La s√©curit√© avant tout !\n\n‚úÖ **Estimation moyenne : 150-300‚Ç¨** selon l'intervention n√©cessaire.`;
    }
  } 
  else if (needType === "engine") {
    if (lowerMessage.includes("voyant")) {
      if (userLevel === 0) {
        baseResponse = `üîß **Diagnostic Voyant Moteur** ‚ö†Ô∏è\n\nVoyant moteur d√©tect√© dans "${message}".\n\n**Questions essentielles :**\n‚Ä¢ Quelle couleur ? (Orange/Rouge)\n‚Ä¢ Il clignote ou reste fixe ?\n‚Ä¢ Depuis combien de temps ?\n‚Ä¢ Perte de puissance ressentie ?\n\n**Diagnostic n√©cessaire** - Le voyant indique un dysfonctionnement √† identifier.\n\nüéØ **DIAGNOSTIC COMPLET GRATUIT :**\nüìß **Tapez votre email dans le chat** ‚¨áÔ∏è\n*Exemple : votre.nom@gmail.com*`;
      } else {
        baseResponse = `üß† **Analyse Voyant Moteur Premium** ‚ö†Ô∏è\n\nAnalyse de "${message}" :\n\n**Si orange fixe :** Pollution/FAP (60%) - 150-400‚Ç¨\n**Si orange clignotant :** Allumage/injection (25%) - 100-250‚Ç¨\n**Si rouge :** Urgence moteur (15%) - 200-800‚Ç¨\n\n**Action imm√©diate :** Diagnostic OBD obligatoire pour identifier le code d√©faut exact.\n\n‚úÖ **Diagnostic OBD : 60-80‚Ç¨** + intervention selon code d√©faut.`;
      }
    } else if (lowerMessage.includes("fap") || lowerMessage.includes("egr")) {
      if (userLevel === 0) {
        baseResponse = `üîß **Diagnostic FAP/EGR** üå™Ô∏è\n\nProbl√®me FAP/EGR d√©tect√© dans "${message}".\n\n**Sympt√¥mes √† pr√©ciser :**\n‚Ä¢ Voyant anti-pollution allum√© ?\n‚Ä¢ Perte de puissance ?\n‚Ä¢ Fum√©e noire √† l'√©chappement ?\n‚Ä¢ Type de conduite (ville/route) ?\n\n**Mon expertise** : FAP/EGR sont ma sp√©cialit√© Re-Fap !\n\nüéØ **DIAGNOSTIC FAP/EGR GRATUIT :**\nüìß **Tapez votre email dans le chat** ‚¨áÔ∏è\n*Exemple : votre.nom@gmail.com*`;
      } else {
        baseResponse = `üß† **Expertise FAP/EGR Premium** üå™Ô∏è\n\nAnalyse sp√©cialis√©e de "${message}" :\n\n**Solutions FAP/EGR :**\n‚Ä¢ R√©g√©n√©ration forc√©e - 80-120‚Ç¨\n‚Ä¢ Nettoyage FAP/EGR - 150-250‚Ç¨\n‚Ä¢ Remplacement FAP - 800-1500‚Ç¨\n‚Ä¢ Reprogrammation l√©gale - 400-600‚Ç¨\n\n**Ma recommandation** : Diagnostic approfondi pour solution optimale.\n\n‚úÖ **Sp√©cialiste Re-Fap** - Solutions sur-mesure selon ton usage !`;
      }
    }
  }
  else if (needType === "power") {
    if (userLevel === 0) {
      baseResponse = `üîß **Diagnostic Perte Puissance** ‚ö°\n\nPerte de puissance d√©tect√©e dans "${message}".\n\n**√Ä pr√©ciser :**\n‚Ä¢ Perte progressive ou brutale ?\n‚Ä¢ √Ä chaud ou √† froid ?\n‚Ä¢ Voyants allum√©s ?\n‚Ä¢ Fum√©e d'√©chappement ?\n\n**Causes multiples possibles** - Diagnostic n√©cessaire pour cibler.\n\nüéØ **DIAGNOSTIC COMPLET GRATUIT :**\nüìß **Tapez votre email dans le chat** ‚¨áÔ∏è\n*Exemple : votre.nom@gmail.com*`;
    } else {
      baseResponse = `üß† **Analyse Perte Puissance Premium** ‚ö°\n\nAnalyse de "${message}" :\n\n**Causes fr√©quentes :**\n‚Ä¢ Turbo d√©faillant (40%) - 500-1200‚Ç¨\n‚Ä¢ Injection/allumage (30%) - 150-400‚Ç¨\n‚Ä¢ FAP colmat√© (20%) - 150-300‚Ç¨\n‚Ä¢ Capteurs HS (10%) - 80-200‚Ç¨\n\n**Diagnostic prioritaire** pour cibler l'intervention.\n\n‚úÖ **Estimation : 150-1200‚Ç¨** selon la cause identifi√©e.`;
    }
  }
  else {
    if (userLevel === 0) {
      baseResponse = `üîß **Diagnostic Auto G√©n√©ral** üöó\n\nAnalyse de "${message}".\n\n**Pour un diagnostic pr√©cis, j'ai besoin de plus d'infos :**\n‚Ä¢ Sympt√¥mes exacts ?\n‚Ä¢ Quand √ßa arrive ?\n‚Ä¢ Voyants allum√©s ?\n‚Ä¢ Bruits particuliers ?\n\n**Expert automobile** pr√™t √† t'aider !\n\nüéØ **DIAGNOSTIC COMPLET GRATUIT :**\nüìß **Tapez votre email dans le chat** ‚¨áÔ∏è\n*Exemple : votre.nom@gmail.com*`;
    } else {
      baseResponse = `üß† **Diagnostic Auto Premium** üîß\n\nAnalyse approfondie de "${message}" :\n\n**M√©thodologie experte :**\n‚Ä¢ Identification sympt√¥mes\n‚Ä¢ Diagnostic diff√©rentiel\n‚Ä¢ Estimation co√ªts\n‚Ä¢ Solutions optimales\n\n**Mon expertise** √† ton service pour r√©soudre ton probl√®me !\n\n‚úÖ **Diagnostic personnalis√©** selon tes sympt√¥mes pr√©cis.`;
    }
  }
  
  return baseResponse;
}

// === FONCTIONS UTILITAIRES ===
function detectNeedType(message) {
  const lower = message.toLowerCase();
  if (lower.includes('frein') || lower.includes('brake')) return "brakes";
  if (lower.includes('moteur') || lower.includes('voyant') || lower.includes('fap') || lower.includes('egr')) return "engine";
  if (lower.includes('puissance') || lower.includes('acceler') || lower.includes('turbo')) return "power";
  if (lower.includes('fumee') || lower.includes('fum√©e')) return "smoke";
  return "general";
}

function calculateScore(needType, mode) {
  const baseScores = { brakes: 8.5, engine: 8.0, power: 7.8, smoke: 8.2, general: 7.5 };
  const modeMultipliers = { dual_brain_real: 1.2, claude_real: 1.1, openai_real: 1.0, simulation_intelligent: 0.9 };
  return Math.min(10, (baseScores[needType] || 7.5) * (modeMultipliers[mode] || 1.0));
}

function calculateLeadValue(needType, userLevel, mode) {
  const baseValues = { brakes: 40, engine: 35, power: 30, smoke: 45, general: 25 };
  const levelMultipliers = { 0: 1, 1: 1.5, 2: 1.8, 3: 2.2 };
  const modeBonus = mode === "dual_brain_real" ? 1.2 : mode.includes("real") ? 1.1 : 1.0;
  
  return Math.round((baseValues[needType] || 25) * (levelMultipliers[userLevel] || 1) * modeBonus);
}

async function logToAirtable(data) {
  try {
    // Simulation du logging Airtable
    console.log('Airtable Log:', {
      message: data.message.substring(0, 50),
      userLevel: data.userLevel,
      leadValue: data.leadValue,
      mode: data.mode,
      timestamp: data.sessionId
    });
  } catch (error) {
    console.error('Erreur Airtable logging:', error);
  }
}
